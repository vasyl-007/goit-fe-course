{"version":3,"sources":["components/form/Form.js","components/wishList/wishList_Item/WishList_Item.js","components/wishList/WishList.js","components/select/Select.js","components/wishForm/WishForm.js","components/espresso/Feedback.js","components/contacts/ContactList.js","components/App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","login","email","password","Form","state","handleSubmit","event","preventDefault","props","getFormValue","setState","handleChange","evt","target","name","value","this","onSubmit","type","onChange","Component","choosePriority","normal","border","high","low","WishListItem","wish","date","id","onDeleteWish","priority","styles","style","onClick","WishList","data","map","elem","key","options","label","Select","onChooseSelect","width","e","Date","toDateString","WishForm","handleSumbmit","console","log","getFormValueWish","shortId","chooseSelect","param","maxLength","minLength","Feedback","good","neutral","bad","countTotalFeedback","prevState","countPositiveFeedbackPercentage","Math","round","ContactList","contacts","number","filter","searchValue","onSearchValue","toLowerCase","includes","addContact","newContact","submitData","some","item","alert","App","isVisible","wishes","getFormValueAuth","prev","deleteWish","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPACMA,EAAgB,CACpBC,MAAO,GACPC,MAAO,GACPC,SAAU,IA+DGC,E,2MA5DbC,M,eAAaL,G,EACbM,aAAe,SAAAC,GACbA,EAAMC,iBAEN,EAAKC,MAAMC,aAAa,EAAKL,OAY7B,EAAKM,SAAL,eAIKX,K,EAGPY,aAAe,SAAAC,GAGb,EAAKF,SAAL,eACGE,EAAIC,OAAOC,KAAOF,EAAIC,OAAOE,S,wEAGzB,MAE4BC,KAAKZ,MAAhCJ,EAFD,EAECA,MAAOC,EAFR,EAEQA,MAAOC,EAFf,EAEeA,SACtB,OACE,oCACE,0BAAMe,SAAUD,KAAKX,cACnB,2BACEa,KAAK,OACLJ,KAAK,QACLK,SAAUH,KAAKL,aACfI,MAAOf,IAET,2BACEkB,KAAK,QACLJ,KAAK,QACLK,SAAUH,KAAKL,aACfI,MAAOd,IAET,2BACEiB,KAAK,WACLJ,KAAK,WACLK,SAAUH,KAAKL,aACfI,MAAOb,IAET,4BAAQgB,KAAK,UAAb,kB,GAvDSE,aCJbC,EAAiB,CACrBC,OAAQ,CACNC,OAAQ,mBAEVC,KAAM,CACJD,OAAQ,iBAEVE,IAAK,CACHF,OAAQ,mBAuCGG,EAbM,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,GAAIC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAE9CC,EAASX,EAAeU,GAC9B,OACE,wBAAIE,MAAOD,GACT,4BAAKL,GACL,2BAAIC,GACJ,4BAAQV,KAAK,SAASgB,QAAS,kBAAMJ,EAAaD,KAAlD,YCjCSM,EAPE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMN,EAAT,EAASA,aAAT,OACf,4BACGM,EAAKC,KAAI,SAAAC,GAAI,OACZ,kBAAC,EAAD,eAAcC,IAAKD,EAAKT,IAAQS,EAAhC,CAAsCR,aAAcA,U,yBCHpDU,EAAU,CACd,CAAEzB,MAAO,OAAQ0B,MAAO,QACxB,CAAE1B,MAAO,SAAU0B,MAAO,UAC1B,CAAE1B,MAAO,MAAO0B,MAAO,QAUVC,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OAEb,yBAAKV,MAAO,CAAEW,MAAO,UACnB,kBAAC,IAAD,CAAUJ,QAASA,EAASrB,SAAU,SAAC0B,GAAD,OAAOF,EAAeE,SCR1D9C,EAAgB,CACpB4B,KAAM,GACNC,MAAM,IAAIkB,MAAOC,eACjBhB,SAAU,UA+CGiB,E,2MA3Cb5C,M,eAAaL,G,EAEbkD,cAAgB,SAAArC,GACdA,EAAIL,iBACJ2C,QAAQC,IAAI,EAAK/C,OACjB,EAAKI,MAAM4C,iBAAX,eAAiC,EAAKhD,MAAtC,CAA6CyB,GAAIwB,SACjD,EAAK3C,SAAL,eAAmBX,K,EAGrBY,aAAe,YAAkC,IAAD,IAA9BE,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKL,SAAL,eACGI,EAAOC,K,EAIZuC,aAAe,SAAAC,GAEb,EAAK7C,SAAS,CACZqB,SAAUwB,EAAMxC,S,wEAIV,IACAY,EAASX,KAAKZ,MAAduB,KACmBX,KAAKR,MAAxBmC,eACR,OACE,oCACE,kBAAC,EAAD,CAAQA,eAAgB3B,KAAKsC,eAC7B,0BAAMrC,SAAUD,KAAKiC,eACnB,2BACEO,UAAW,GACXC,UAAW,EACXvC,KAAK,OACLJ,KAAK,OACLK,SAAUH,KAAKL,aACfI,MAAOY,U,GApCIP,aC4CRsC,E,2MAnDbtD,MAAQ,CACNuD,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,mBAAqB,SAAAlD,GAGnB,IAAME,EAAOF,EAAIC,OAAOC,KACxB,EAAKJ,UAAS,SAAAqD,GAEZ,OAAO,eAAGjD,EAAOiD,EAAUjD,GAAQ,O,EAIvCkD,gCAAkC,a,wEAKhC,OACE,oCACE,qDACA,4BAAQ9C,KAAK,SAASJ,KAAK,OAAOoB,QAASlB,KAAK8C,oBAAhD,QAGA,4BAAQ5C,KAAK,SAASJ,KAAK,UAAUoB,QAASlB,KAAK8C,oBAAnD,WAGA,4BAAQ5C,KAAK,SAASJ,KAAK,MAAMoB,QAASlB,KAAK8C,oBAA/C,OAGA,0CACA,mCAAS9C,KAAKZ,MAAMuD,MACpB,sCAAY3C,KAAKZ,MAAMwD,SACvB,kCAAQ5C,KAAKZ,MAAMyD,KACnB,+CACoB,IACjBI,KAAKC,MACHlD,KAAKZ,MAAMuD,MACT3C,KAAKZ,MAAMuD,KAAO3C,KAAKZ,MAAMyD,IAAM7C,KAAKZ,MAAMwD,SAC/C,MACC,EANP,U,GAtCexC,aCoHR+C,E,2MAlHb/D,MAAQ,CACNgE,SAAU,CACR,CAAEvC,GAAI,OAAQf,KAAM,gBAAiBuD,OAAQ,aAC7C,CAAExC,GAAI,OAAQf,KAAM,iBAAkBuD,OAAQ,aAC9C,CAAExC,GAAI,OAAQf,KAAM,gBAAiBuD,OAAQ,aAC7C,CAAExC,GAAI,OAAQf,KAAM,iBAAkBuD,OAAQ,cAEhDC,OAAQ,GACRxD,KAAM,GACNuD,OAAQ,GACRE,YAAa,I,EAGfC,cAAgB,SAAA3B,GAAM,IAAD,EACb/B,EAAO+B,EAAEhC,OAAOC,KACtB,EAAKJ,UAAL,mBACGI,EAAO+B,EAAEhC,OAAOE,OADnB,uBAEU,EAAKX,MAAMgE,SAASE,QAAO,SAAAhC,GAAI,OACrCA,EAAKxB,KAAK2D,cAAcC,SAAS,EAAKtE,MAAMmE,YAAYE,mBAH5D,K,EAOFtD,SAAW,SAAA0B,GACT,IAAM/B,EAAO+B,EAAEhC,OAAOC,KACtB,EAAKJ,SAAL,eAAiBI,EAAO+B,EAAEhC,OAAOE,S,EAkBnC4D,WAAa,WACX,IAAMC,EAAa,CACjB/C,GAAIwB,MACJvC,KAAM,EAAKV,MAAMU,KACjBuD,OAAQ,EAAKjE,MAAMiE,QAErB,EAAK3D,SAAS,CAAE0D,SAAS,GAAD,mBAAM,EAAKhE,MAAMgE,UAAjB,CAA2BQ,O,EAGrDC,WAAa,SAAAhC,GACXA,EAAEtC,iBACF2C,QAAQC,IAAI,kBAAmB,EAAK/C,MAAMU,MAC1C,EAAKV,MAAMgE,SAASU,MAAK,SAAAC,GAAI,OAAIA,EAAKjE,KAAK4D,SAAS,EAAKtE,MAAMU,SAC/DkE,MAAM,oKAAoC,EAAKL,c,wEAO/C,OACE,oCACE,yCACA,0BAAM1D,SAAUD,KAAK6D,YACnB,oCACA,2BACE3D,KAAK,OACLJ,KAAK,OACLK,SAAUH,KAAKG,SACfJ,MAAOC,KAAKZ,MAAMU,OAEpB,sCACA,2BACEI,KAAK,OACLJ,KAAK,SACLK,SAAUH,KAAKG,SACfJ,MAAOC,KAAKZ,MAAMiE,SAEpB,6BACA,4BAAQnD,KAAK,SAASC,SAAUH,KAAK2D,YAArC,eAGA,8BAEF,4CACA,4BACG3D,KAAKZ,MAAMgE,SAAS/B,KAAI,SAAA0C,GAAI,OAC3B,4BACGA,EAAKjE,KADR,KACgBiE,EAAKV,YAKzB,oDACA,2BACEnD,KAAK,OACLC,SAAUH,KAAKwD,cACf1D,KAAK,cACLC,MAAOC,KAAKZ,MAAMmE,cAEpB,4BACGvD,KAAKZ,MAAMkE,OAAOjC,KAAI,SAAA0C,GAAI,OACzB,4BACGA,EAAKjE,KADR,KACgBiE,EAAKV,iB,GA1GPjD,aCgEX6D,E,2MA1Db7E,MAAQ,CACN8E,WAAW,EACXC,OAAQ,I,EAEVC,iBAAmB,SAAArE,GACjBmC,QAAQC,IAAI,aAAWpC,GACnBA,GACF,EAAKL,SAAS,CACZwE,WAAW,K,EAKjB9B,iBAAmB,SAAArC,GACjBmC,QAAQC,IAAIpC,GACZ,EAAKL,UAAS,SAAA2E,GAEZ,OADAnC,QAAQC,IAAI,aAAckC,GACnB,CACLF,OAAO,GAAD,mBAAME,EAAKF,QAAX,CAAmBpE,S,EAK/BuE,WAAa,SAAAzD,GACX,EAAKnB,UAAS,SAAA2E,GAAI,MAAK,CACrBF,OAAQE,EAAKF,OAAOb,QAAO,SAAAhC,GAAI,OAAIA,EAAKT,KAAOA,U,wEAQzC,IAAD,EACuBb,KAAKZ,MAA3B8E,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,oCACGD,EACC,kBAAC,EAAD,CAAMzE,aAAcO,KAAKoE,mBAEzB,oCACE,kBAAC,EAAD,CACEhC,iBAAkBpC,KAAKoC,iBACvBT,eAAgB3B,KAAKsC,eAEJ,IAAlB6B,EAAOI,QACN,kBAAC,EAAD,CAAUzD,aAAcd,KAAKsE,WAAYlD,KAAM+C,KAKrD,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GArDU/D,aCIEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9dbd2b6b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nconst INITIAL_STATE = {\r\n  login: \"\",\r\n  email: \"\",\r\n  password: \"\"\r\n};\r\nclass Form extends Component {\r\n  state = { ...INITIAL_STATE };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.getFormValue(this.state);\r\n    // NODE JS  СПОСОБ СБОРА ФОРМЫ\r\n    // console.log(event.target.elements);\r\n    // const [login, email, password] = event.target.elements;\r\n    // console.log(login.value);\r\n    // console.log(email.value);\r\n    // console.log(password.value);\r\n    // this.setState({\r\n    //  login: login.value,\r\n    //  email: email.value,\r\n    //  password: password.value,\r\n    // });\r\n    this.setState({ // очистка формы\r\n      // login: ‘’,\r\n      // email: ‘’,\r\n      // password: ‘’\r\n      ...INITIAL_STATE\r\n    });\r\n  };\r\n  handleChange = evt => {\r\n    // console.log(evt.target.value);\r\n    // console.log(evt.target.name);\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  };\r\n  render() {\r\n    //console.log(this.state);\r\n    const { login, email, password } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"login\"\r\n            onChange={this.handleChange}\r\n            value={login}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={this.handleChange}\r\n            value={email}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={this.handleChange}\r\n            value={password}\r\n          />\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Form;","import React from \"react\";\r\n\r\nconst choosePriority = {\r\n  normal: {\r\n    border: \"1px solid green\"\r\n  },\r\n  high: {\r\n    border: \"1px solid red\"\r\n  },\r\n  low: {\r\n    border: \"1px solid blue\"\r\n  }\r\n};\r\n\r\n// const choosePriority = param => {\r\n//   let border;\r\n//   switch (param) {\r\n//     case \"low\":\r\n//       border = { border: \"1px solid blue\" };\r\n//       break;\r\n//     case \"high\":\r\n//       border = { border: \"1px solid red\" };\r\n//       break;\r\n//     default:\r\n//       border = { border: \"1px solid green\" };  \r\n//       break;\r\n//   }\r\n//   return border;\r\n// };\r\n\r\n// const choosePriority = {\r\n//   low: { border: \"1px solid blue\" },\r\n//   high: { border: \"1px solid red\" },\r\n//   normal: { border: \"1px solid green\" }\r\n// };\r\n\r\nconst WishListItem = ({ wish, date, id, onDeleteWish, priority }) => {\r\n  //   const styles = choosePriority(priority);\r\n  const styles = choosePriority[priority];\r\n  return (\r\n    <li style={styles}>\r\n      <h2>{wish}</h2>\r\n      <p>{date}</p>\r\n      <button type=\"button\" onClick={() => onDeleteWish(id)}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default WishListItem;\r\n","import React from \"react\";\r\nimport WishListItem from \"./wishList_Item/WishList_Item\";\r\n\r\nconst WishList = ({ data, onDeleteWish }) => (\r\n  <ul>\r\n    {data.map(elem => (\r\n      <WishListItem key={elem.id} {...elem} onDeleteWish={onDeleteWish} />\r\n    ))}\r\n  </ul>\r\n);\r\nexport default WishList;\r\n\r\n// class WishList extends Component {\r\n//     state = {  }\r\n//     render() {\r\n//         return (\r\n//             <h2>Title</h2>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default WishList;\r\n","import React from \"react\";\r\nimport Selected from \"react-select\";\r\n\r\nconst options = [\r\n  { value: \"high\", label: \"High\" },\r\n  { value: \"normal\", label: \"Normal\" },\r\n  { value: \"low\", label: \"Low\" }\r\n];\r\n\r\nconst Select = ({ onChooseSelect }) => (\r\n  // sl\r\n  <div style={{ width: \"200px\" }}>\r\n    <Selected options={options} onChange={(e) => onChooseSelect(e)} />\r\n  </div>\r\n);\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport shortId from \"shortid\";\r\nimport Select from \"../select/Select\";\r\n\r\nconst INITIAL_STATE = {\r\n  wish: \"\",\r\n  date: new Date().toDateString(),\r\n  priority: \"Normal\"\r\n};\r\n\r\nclass WishForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleSumbmit = evt => {\r\n    evt.preventDefault();\r\n    console.log(this.state);\r\n    this.props.getFormValueWish({ ...this.state, id: shortId() });\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  chooseSelect = param => {\r\n    // console.log(param.value);\r\n    this.setState({\r\n      priority: param.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { wish } = this.state;\r\n    const { onChooseSelect } = this.props;\r\n    return (\r\n      <>\r\n        <Select onChooseSelect={this.chooseSelect} />\r\n        <form onSubmit={this.handleSumbmit}>\r\n          <input\r\n            maxLength={15}\r\n            minLength={5}\r\n            type=\"text\"\r\n            name=\"wish\"\r\n            onChange={this.handleChange}\r\n            value={wish}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WishForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  countTotalFeedback = evt => {\r\n    // event.persist();\r\n\r\n    const name = evt.target.name;\r\n    this.setState(prevState => {\r\n      // return { good: prevState.good + 1 };\r\n      return { [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Please leave feedback</h2>\r\n        <button type=\"button\" name=\"good\" onClick={this.countTotalFeedback}>\r\n          Good\r\n        </button>\r\n        <button type=\"button\" name=\"neutral\" onClick={this.countTotalFeedback}>\r\n          Neutral\r\n        </button>\r\n        <button type=\"button\" name=\"bad\" onClick={this.countTotalFeedback}>\r\n          Bad\r\n        </button>\r\n        <h2>Statistics</h2>\r\n        <p>Good {this.state.good}</p>\r\n        <p>Neutral {this.state.neutral}</p>\r\n        <p>Bad {this.state.bad}</p>\r\n        <p>\r\n          Positive feedback{\" \"}\r\n          {Math.round(\r\n            (this.state.good /\r\n              (this.state.good + this.state.bad + this.state.neutral)) *\r\n              100\r\n          ) || 0}\r\n          %\r\n        </p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React, { Component } from \"react\";\r\nimport shortId from \"shortid\";\r\n\r\nclass ContactList extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: [],\r\n    name: \"\",\r\n    number: \"\",\r\n    searchValue: \"\"\r\n  };\r\n\r\n  onSearchValue = e => {\r\n    const name = e.target.name;\r\n    this.setState({\r\n      [name]: e.target.value,\r\n      filter: this.state.contacts.filter(elem =>\r\n        elem.name.toLowerCase().includes(this.state.searchValue.toLowerCase())\r\n      )\r\n    });\r\n  };\r\n  onChange = e => {\r\n    const name = e.target.name;\r\n    this.setState({ [name]: e.target.value });\r\n    // console.log('name', name)\r\n\r\n    // if (this.searchValue !== \"\") {\r\n    //   // console.log(\"this.state.searchValue\", this.state.searchValue);\r\n    //   this.setState({\r\n    //     filter: this.state.contacts.filter(elem => elem.name === this.searchValue)\r\n    //     // <ul>\r\n    //     //   <li>{this.searchValue}</li>\r\n    //     // </ul>\r\n    //   });\r\n    // }\r\n\r\n    // <li key={item.id}>\r\n    //     {item.name}, {item.number}\r\n    // </li>\r\n  };\r\n\r\n  addContact = () => {\r\n    const newContact = {\r\n      id: shortId(),\r\n      name: this.state.name,\r\n      number: this.state.number\r\n    };\r\n    this.setState({ contacts: [...this.state.contacts, newContact] });\r\n  };\r\n\r\n  submitData = e => {\r\n    e.preventDefault();\r\n    console.log('this.state.name', this.state.name)\r\n    this.state.contacts.some(item => item.name.includes(this.state.name)) ? \r\n    alert(\"Такой контанкт уже существует!\") : this.addContact();\r\n\r\n\r\n    // this.state.name = \"\";\r\n    // this.state.number = \"\";\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={this.submitData}>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n          />\r\n          <h2>Number</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            onChange={this.onChange}\r\n            value={this.state.number}\r\n          />\r\n          <br />\r\n          <button type=\"submit\" onChange={this.addContact}>\r\n            Add contact\r\n          </button>\r\n          <br />\r\n        </form>\r\n        <h2>All Contacts</h2>\r\n        <ul>\r\n          {this.state.contacts.map(item => (\r\n            <li>\r\n              {item.name}, {item.number}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <h2>Find contact by name</h2>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.onSearchValue}\r\n          name=\"searchValue\"\r\n          value={this.state.searchValue}\r\n        ></input>\r\n        <ul>\r\n          {this.state.filter.map(item => (\r\n            <li>\r\n              {item.name}, {item.number}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport Form from \"./form/Form\";\nimport WishList from \"./wishList/WishList\";\nimport WishForm from \"./wishForm/WishForm\";\nimport Feedback from \"./espresso/Feedback\";\n//=============================================\nimport ContactList from \"./contacts/ContactList\";\n//=============================================\nclass App extends Component {\n  state = {\n    isVisible: false,\n    wishes: []\n  };\n  getFormValueAuth = value => {\n    console.log(\"app -->\", value);\n    if (value) {\n      this.setState({\n        isVisible: true\n      });\n    }\n  };\n\n  getFormValueWish = value => {\n    console.log(value);\n    this.setState(prev => {\n      console.log(\"prevstate:\", prev);\n      return {\n        wishes: [...prev.wishes, value]\n      };\n    });\n  };\n\n  deleteWish = id => {\n    this.setState(prev => ({\n      wishes: prev.wishes.filter(elem => elem.id !== id)\n    }));\n  };\n\n  // chooseSelect = param => {\n  //   console.log(param);\n  // };\n\n  render() {\n    const { isVisible, wishes } = this.state;\n    return (\n      <>\n        {isVisible ? (\n          <Form getFormValue={this.getFormValueAuth} />\n        ) : (\n          <>\n            <WishForm\n              getFormValueWish={this.getFormValueWish}\n              onChooseSelect={this.chooseSelect}\n            />\n            {wishes.length !== 0 && (\n              <WishList onDeleteWish={this.deleteWish} data={wishes} />\n            )}\n          </>\n        )}\n\n        <Feedback />\n        <ContactList />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// <>\n// {isVisible ? (<Form getFormValue={this.getFormValueAuth} />) : (\n//   <>\n//   <WishForm getFormValueWish={this.getFormValueWish} />\n//   {wishes.length !== 0 && (\n//     <WishList onDeleteWish={this.onDeleteWish} data={wishes} />)\n//   </> }}\n// )}\n//   <Feedback />\n//   <ContactList />\n//   <WishForm getFormValueWish={this.getFormValueWish} />\n//   {wishes.length !== 0 && (\n//     <WishList onDeleteWish={this.onDeleteWish} data={wishes} />\n//   )}\n//   {/* {isVisible ? <Form getFormValue={this.getFormValueAuth} /> : <p>NEXT</p>} */}\n// </>\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}